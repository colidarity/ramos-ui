{"version":3,"file":"650.js","mappings":"wJAAA,QAAe,IAA0B,uC,wBCoEzC,QA5DmB,WACjB,IAAMA,GAAUC,EAAAA,EAAAA,QAAO,MACjBC,GAAWD,EAAAA,EAAAA,QAAO,MAClBE,GAAaF,EAAAA,EAAAA,QAAO,MAEpBG,GAAcC,EAAAA,EAAAA,GAAUL,GACxBM,GAAeD,EAAAA,EAAAA,GAAUH,GACzBK,GAAiBF,EAAAA,EAAAA,GAAUF,GACjC,OACEK,EAAAA,cAACC,EAAAA,GAAiB,KAChBD,EAAAA,cAAA,OAAKE,UAAU,mBACbF,EAAAA,cAAA,UACEG,IAAKX,EACLU,UAAS,YAAAE,OAAcR,EAAc,WAAa,KAElDI,EAAAA,cAAA,OAAKK,IAAKC,EAASC,IAAI,UAEzBP,EAAAA,cAACQ,EAAAA,GAAK,CACJN,UAAWJ,EAAe,kBAAoB,GAC9CK,IAAKT,EACLe,UAAU,UAEVT,EAAAA,cAAA,QAAME,UAAU,SACdF,EAAAA,cAACU,EAAAA,EAAY,CAACC,KAAM,kBAGxBX,EAAAA,cAAA,KACEE,UACEH,EAAiB,uCAAyC,UAE7D,+CAECC,EAAAA,cAAA,WAAM,0CAERA,EAAAA,cAACY,EAAAA,GAAW,CAACT,IAAKR,GAChBK,EAAAA,cAACa,EAAAA,GAAM,CACLX,UACEH,EAAiB,qCAAuC,SAE1De,GAAG,kBACHC,MAAM,QACNC,MAAM,gBACP,kBAGDhB,EAAAA,cAACa,EAAAA,GAAM,CACLX,UACEH,EAAiB,qCAAuC,SAE1De,GAAG,gBACHC,MAAM,QACNC,MAAM,gBACP,oBAOX,C,0JChDA,QAjBqB,SAAHC,GAAiC,I,EAA3BN,EAAIM,EAAJN,KAAMO,EAAcD,EAAdC,eAC5B,MAAO,GAAPd,O,+CACKO,EAAKQ,MAAM,IAAIC,KAAI,SAACC,EAAMC,GAAG,OAC9BtB,EAAAA,cAAA,QAAMuB,IAAKD,EAAKpB,UAAU,SACvBmB,EACI,M,gkBACP,CACFH,EACElB,EAAAA,cAAA,QAAMuB,IAAG,iBAAAnB,OAAmBO,GAAQT,UAAU,SAC3CgB,GAGH,IAGN,C","sources":["webpack://ramos-ui/./assets/images/link.png","webpack://ramos-ui/./src/Home/get-started.js","webpack://ramos-ui/./src/components/TextSplitter/index.js"],"sourcesContent":["export default __webpack_public_path__ + \"a740a2eee8c4dcb3770d90a70abf4226.png\";","import React, { useRef } from 'react';\n\nimport { BigH1, Button, ButtonGroup, GetStartedWrapper } from './styled';\n\nimport LinkIco from '../../assets/images/link.png';\nimport useInView from '../hooks/useInView';\nimport TextSplitter from '../components/TextSplitter';\n\nconst GetStarted = () => {\n  const iconRef = useRef(null);\n  const titleRef = useRef(null);\n  const buttonsRef = useRef(null);\n\n  const iconVisible = useInView(iconRef);\n  const titleVisible = useInView(titleRef);\n  const buttonsVisible = useInView(buttonsRef);\n  return (\n    <GetStartedWrapper>\n      <div className=\"get-started-sec\">\n        <figure\n          ref={iconRef}\n          className={`logo-ico ${iconVisible ? 'animated' : ''}`}\n        >\n          <img src={LinkIco} alt=\"logo\" />\n        </figure>\n        <BigH1\n          className={titleVisible ? 'animate-heading' : ''}\n          ref={titleRef}\n          textalign=\"center\"\n        >\n          <span className=\"block\">\n            <TextSplitter text={'Get Started'} />\n          </span>\n        </BigH1>\n        <p\n          className={\n            buttonsVisible ? 'animate__animated animate__fadeInUp ' : 'hidden'\n          }\n        >\n          Turn information into advantage! Start using\n          <br /> Ramos today. Sign up for a free trial\n        </p>\n        <ButtonGroup ref={buttonsRef}>\n          <Button\n            className={\n              buttonsVisible ? 'animate__animated animate__zoomIn ' : 'hidden'\n            }\n            bg=\"var(--btn-gray)\"\n            width=\"150px\"\n            color=\"var(--black)\"\n          >\n            Request a demo\n          </Button>\n          <Button\n            className={\n              buttonsVisible ? 'animate__animated animate__zoomIn ' : 'hidden'\n            }\n            bg=\"var(--orange)\"\n            width=\"150px\"\n            color=\"var(--white)\"\n          >\n            Start for free\n          </Button>\n        </ButtonGroup>\n      </div>\n    </GetStartedWrapper>\n  );\n};\nexport default GetStarted;\n","import React from 'react';\n\nconst TextSplitter = ({ text, appendedMarkup }) => {\n  return [\n    ...text.split('').map((char, idx) => (\n      <span key={idx} className=\"split\">\n        {char}\n      </span>\n    )),\n    appendedMarkup ? (\n      <span key={`appended-text-${text}`} className=\"split\">\n        {appendedMarkup}\n      </span>\n    ) : (\n      ''\n    ),\n  ];\n};\n\nexport default TextSplitter;\n"],"names":["iconRef","useRef","titleRef","buttonsRef","iconVisible","useInView","titleVisible","buttonsVisible","React","GetStartedWrapper","className","ref","concat","src","LinkIco","alt","BigH1","textalign","TextSplitter","text","ButtonGroup","Button","bg","width","color","_ref","appendedMarkup","split","map","char","idx","key"],"sourceRoot":""}