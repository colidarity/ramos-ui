{"version":3,"file":"520.js","mappings":"uJAAA,QAAe,IAA0B,uCCAzC,EAAe,IAA0B,uC,wBC4GzC,QApGY,WACV,IAAMA,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAgBD,EAAAA,EAAAA,QAAO,MACvBE,GAAYF,EAAAA,EAAAA,QAAO,MAEnBG,GAAeC,EAAAA,EAAAA,GAAUL,GACzBM,GAAoBD,EAAAA,EAAAA,GAAUH,GAC9BK,GAAgBF,EAAAA,EAAAA,GAAUF,GAChC,OACEK,EAAAA,cAACC,EAAAA,GAAU,KACTD,EAAAA,cAACE,EAAAA,GAAK,CAACC,UAAWP,EAAe,kBAAoB,GAAIQ,IAAKZ,GAC5DQ,EAAAA,cAAA,QAAMG,UAAU,SACdH,EAAAA,cAACK,EAAAA,EAAY,CAACC,KAAM,aAAe,IACnCN,EAAAA,cAAA,QAAMG,UAAU,SACdH,EAAAA,cAACK,EAAAA,EAAY,CAACC,KAAM,iBAGxBN,EAAAA,cAAA,QAAMG,UAAU,SACdH,EAAAA,cAACK,EAAAA,EAAY,CAACC,KAAM,yBAIxBN,EAAAA,cAAA,OAAKG,UAAU,SAASC,IAAKV,GAC3BM,EAAAA,cAAA,OAAKG,UAAU,SACbH,EAAAA,cAACO,EAAAA,GAAW,CACVJ,UACEL,EACI,qCACA,SAENU,UAAU,OACVC,KAAM,QACNC,GAAI,WAEJV,EAAAA,cAAA,OAAKW,IAAKC,KAEZZ,EAAAA,cAACO,EAAAA,GAAW,CACVJ,UACEL,EACI,oDACA,SAENU,UAAU,OACVC,KAAM,QACNC,GAAI,iBAEJV,EAAAA,cAAA,OAAKW,IAAKE,MAGdb,EAAAA,cAAA,OACEG,UAAS,SAAAW,OACPhB,EAAoB,qCAAuC,WAG7DE,EAAAA,cAAA,UACEA,EAAAA,cAAA,YAAM,sBACNA,EAAAA,cAAA,YAAM,yBAKZA,EAAAA,cAAA,OAAKG,UAAU,MAAMC,IAAKT,GACxBK,EAAAA,cAAA,KACEG,UACEJ,EAAgB,uCAAyC,UAE5D,qFAGCC,EAAAA,cAAA,WAAM,+EAIRA,EAAAA,cAACe,EAAAA,GAAW,KACVf,EAAAA,cAACgB,EAAAA,GAAM,CACLb,UACEJ,EAAgB,qCAAuC,SAEzDW,GAAG,kBACHO,MAAM,QACNC,MAAM,gBACP,kBAGDlB,EAAAA,cAACgB,EAAAA,GAAM,CACLb,UACEJ,EAAgB,qCAAuC,SAEzDW,GAAG,gBACHO,MAAM,QACNC,MAAM,gBACP,oBAOX,C,0JCvFA,QAjBqB,SAAHC,GAAiC,I,EAA3Bb,EAAIa,EAAJb,KAAMc,EAAcD,EAAdC,eAC5B,MAAO,GAAPN,O,+CACKR,EAAKe,MAAM,IAAIC,KAAI,SAACC,EAAMC,GAAG,OAC9BxB,EAAAA,cAAA,QAAMyB,IAAKD,EAAKrB,UAAU,SACvBoB,EACI,M,gkBACP,CACFH,EACEpB,EAAAA,cAAA,QAAMyB,IAAG,iBAAAX,OAAmBR,GAAQH,UAAU,SAC3CiB,GAGH,IAGN,C","sources":["webpack://ramos-ui/./assets/images/heart-beat.png","webpack://ramos-ui/./assets/images/grow-faster.png","webpack://ramos-ui/./src/Home/cta.js","webpack://ramos-ui/./src/components/TextSplitter/index.js"],"sourcesContent":["export default __webpack_public_path__ + \"cec516726dc366d097cde4f1adb2f994.png\";","export default __webpack_public_path__ + \"ab9d3498356f0ef3b2aab111e69ef37a.png\";","import React, { useRef } from 'react';\nimport { BigH1, Button, ButtonGroup, CTAWrapper, RoundedIcon } from './styled';\n\nimport HeartBeatIco from '../../assets/images/heart-beat.png';\nimport GrowFasterIco from '../../assets/images/grow-faster.png';\nimport useInView from '../hooks/useInView';\nimport TextSplitter from '../components/TextSplitter';\n\nconst CTA = () => {\n  const titleRef = useRef(null);\n  const titleIconsRef = useRef(null);\n  const footerRef = useRef(null);\n\n  const titleVisible = useInView(titleRef);\n  const titleIconsVisible = useInView(titleIconsRef);\n  const footerVisible = useInView(footerRef);\n  return (\n    <CTAWrapper>\n      <BigH1 className={titleVisible ? 'animate-heading' : ''} ref={titleRef}>\n        <span className=\"block\">\n          <TextSplitter text={'Maximize'} />{' '}\n          <span className=\"light\">\n            <TextSplitter text={'efficiency'} />\n          </span>\n        </span>\n        <span className=\"block\">\n          <TextSplitter text={'with our intuitive'} />\n        </span>\n      </BigH1>\n\n      <div className=\"badges\" ref={titleIconsRef}>\n        <div className=\"icons\">\n          <RoundedIcon\n            className={\n              titleIconsVisible\n                ? 'animate__animated animate__zoomIn '\n                : 'hidden'\n            }\n            imagesize=\"60px\"\n            size={'102px'}\n            bg={'#f2f2f2'}\n          >\n            <img src={HeartBeatIco} />\n          </RoundedIcon>\n          <RoundedIcon\n            className={\n              titleIconsVisible\n                ? 'animate__animated animate__zoomIn animate__faster'\n                : 'hidden'\n            }\n            imagesize=\"60px\"\n            size={'102px'}\n            bg={'var(--yellow)'}\n          >\n            <img src={GrowFasterIco} />\n          </RoundedIcon>\n        </div>\n        <div\n          className={`badge ${\n            titleIconsVisible ? 'animate__animated animate__zoomIn ' : 'hidden'\n          }`}\n        >\n          <h2>\n            <span>analytics services</span>\n            <span>analytics services</span>\n          </h2>\n        </div>\n      </div>\n\n      <div className=\"cta\" ref={footerRef}>\n        <p\n          className={\n            footerVisible ? 'animate__animated animate__fadeInUp ' : 'hidden'\n          }\n        >\n          Explore traffic sources, page behaviour, conversions and more to gain\n          deep insight\n          <br /> into your audience. With us, your business doesn't just adapt -\n          it evolves\n        </p>\n\n        <ButtonGroup>\n          <Button\n            className={\n              footerVisible ? 'animate__animated animate__zoomIn ' : 'hidden'\n            }\n            bg=\"var(--btn-gray)\"\n            width=\"150px\"\n            color=\"var(--black)\"\n          >\n            Request a demo\n          </Button>\n          <Button\n            className={\n              footerVisible ? 'animate__animated animate__zoomIn ' : 'hidden'\n            }\n            bg=\"var(--orange)\"\n            width=\"150px\"\n            color=\"var(--white)\"\n          >\n            Start for free\n          </Button>\n        </ButtonGroup>\n      </div>\n    </CTAWrapper>\n  );\n};\n\nexport default CTA;\n","import React from 'react';\n\nconst TextSplitter = ({ text, appendedMarkup }) => {\n  return [\n    ...text.split('').map((char, idx) => (\n      <span key={idx} className=\"split\">\n        {char}\n      </span>\n    )),\n    appendedMarkup ? (\n      <span key={`appended-text-${text}`} className=\"split\">\n        {appendedMarkup}\n      </span>\n    ) : (\n      ''\n    ),\n  ];\n};\n\nexport default TextSplitter;\n"],"names":["titleRef","useRef","titleIconsRef","footerRef","titleVisible","useInView","titleIconsVisible","footerVisible","React","CTAWrapper","BigH1","className","ref","TextSplitter","text","RoundedIcon","imagesize","size","bg","src","HeartBeatIco","GrowFasterIco","concat","ButtonGroup","Button","width","color","_ref","appendedMarkup","split","map","char","idx","key"],"sourceRoot":""}