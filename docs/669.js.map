{"version":3,"file":"669.js","mappings":"+IAAA,QAAe,IAA0B,uCCAzC,EAAe,IAA0B,uCCAzC,EAAe,IAA0B,uCCAzC,EAAe,IAA0B,uC,mBCE5BA,E,QAAcC,GAAOC,OAAMC,I,EAAA,+jB,kBAAAA,E,2ECWxC,QAVyB,WACvB,OACEC,EAAAA,cAACJ,EAAW,KACVI,EAAAA,cAAA,aACAA,EAAAA,cAAA,aACAA,EAAAA,cAAA,aAGN,E,kIC4GA,QAjGmB,WACjB,I,IAAMC,GAAaC,EAAAA,EAAAA,QAAO,MACpBC,GAAYC,EAAAA,EAAAA,GAAUH,GACqBI,G,GAAfC,EAAAA,EAAAA,WAAS,G,EAAM,E,k5BAA1CC,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAY9B,OAVAI,EAAAA,EAAAA,YAAU,WACJN,EACFO,YAAW,WACTF,GAAa,EACf,GAAG,KAEHA,GAAa,EAEjB,GAAG,CAACL,IAGFH,EAAAA,cAACW,EAAAA,GAAc,KACbX,EAAAA,cAACY,EAAAA,GAAY,KACXZ,EAAAA,cAACa,EAAAA,GAAW,CACVC,UAAS,GAAAC,OACPR,EACI,iEACA,UAENS,UAAW,OACXC,KAAM,QACNC,GAAI,mBAEJlB,EAAAA,cAAA,OAAKmB,IAAKC,KAEZpB,EAAAA,cAACa,EAAAA,GAAW,CACVC,UAAS,GAAAC,OACPR,EACI,iEACA,UAENS,UAAW,OACXC,KAAM,QACNC,GAAI,iBAEJlB,EAAAA,cAAA,OAAKmB,IAAKE,MAIdrB,EAAAA,cAACsB,EAAAA,GAAO,CAACC,IAAKtB,EAAYa,UAAWX,EAAY,kBAAoB,IACnEH,EAAAA,cAAA,QAAMc,UAAU,SACdd,EAAAA,cAACwB,EAAAA,EAAY,CAACC,KAAM,eAEtBzB,EAAAA,cAAA,QAAMc,UAAU,SACdd,EAAAA,cAACwB,EAAAA,EAAY,CAACC,KAAM,SAAU,IAE9BzB,EAAAA,cAAA,QAAMc,UAAU,SACdd,EAAAA,cAACwB,EAAAA,EAAY,CAACC,KAAM,SAAU,KAGhCzB,EAAAA,cAACwB,EAAAA,EAAY,CAACC,KAAM,QAAS,MAE/BzB,EAAAA,cAAA,QAAMc,UAAU,SACdd,EAAAA,cAACwB,EAAAA,EAAY,CAACC,KAAM,UAAW,KAAOzB,EAAAA,cAAA,QAAMc,UAAU,UACtDd,EAAAA,cAACwB,EAAAA,EAAY,CAACC,KAAM,QAAS,IAE7BzB,EAAAA,cAACwB,EAAAA,EAAY,CAACC,KAAM,aAIxBzB,EAAAA,cAAC0B,EAAAA,GAAQ,CACPZ,UACEP,EAAY,6CAA+C,SAE7DS,UAAW,OACXC,KAAM,QACNC,GAAI,iBAEJlB,EAAAA,cAAC2B,EAAgB,OAEnB3B,EAAAA,cAAC4B,EAAAA,GAAQ,KACP5B,EAAAA,cAAC6B,EAAAA,GAAO,CACNf,UACEP,EAAY,6CAA+C,UAG7DP,EAAAA,cAAA,OAAKmB,IAAKW,EAASC,MAAO,GAAIC,OAAQ,MAExChC,EAAAA,cAACiC,EAAAA,GAAc,CACbnB,UACEP,EAAY,6CAA+C,SAE7DwB,MAAO,IACPC,OAAQ,IACRb,IAAKe,IACJ,IACHlC,EAAAA,cAAA,YAIR,C,0JClGA,QAjBqB,SAAHmC,GAAiC,I,EAA3BV,EAAIU,EAAJV,KAAMW,EAAcD,EAAdC,eAC5B,MAAO,GAAPrB,O,+CACKU,EAAKY,MAAM,IAAIC,KAAI,SAACC,EAAMC,GAAG,OAC9BxC,EAAAA,cAAA,QAAMyC,IAAKD,EAAK1B,UAAU,SACvByB,EACI,M,gkBACP,CACFH,EACEpC,EAAAA,cAAA,QAAMyC,IAAG,iBAAA1B,OAAmBU,GAAQX,UAAU,SAC3CsB,GAGH,IAGN,C","sources":["webpack://ramos-ui/./assets/images/atf-image.png","webpack://ramos-ui/./assets/images/play-light-ico.svg","webpack://ramos-ui/./assets/images/flash-orange-ico.svg","webpack://ramos-ui/./assets/images/chart-light-ico.svg","webpack://ramos-ui/./src/components/AnimatedLinesIco/styled.js","webpack://ramos-ui/./src/components/AnimatedLinesIco/index.js","webpack://ramos-ui/./src/Home/atf.js","webpack://ramos-ui/./src/components/TextSplitter/index.js"],"sourcesContent":["export default __webpack_public_path__ + \"8063fe3016eb02d27ebc6e562c884206.png\";","export default __webpack_public_path__ + \"fa53056a9f210614ce92ac3ff3156017.svg\";","export default __webpack_public_path__ + \"a2f61cfb8563be9e72acb8cba6814041.svg\";","export default __webpack_public_path__ + \"9bc6f2e2d604e9a2881b61f09b9fbe95.svg\";","import styled from 'styled-components';\n\nexport const AnimatedIco = styled.figure`\n  width: 78px;\n  height: 78px;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  span {\n    display: inline-block;\n    background-color: var(--black);\n    width: 6px;\n    border-radius: 3px;\n    margin-inline: 2px;\n    position: absolute;\n    &:nth-child(1) {\n      height: 20px;\n      bottom: 20px;\n      left: 25px;\n    }\n    &:nth-child(2) {\n      height: 30px;\n      bottom: 25px;\n      left: 35px;\n    }\n    &:nth-child(3) {\n      height: 10px;\n      bottom: 31px;\n      left: 45px;\n    }\n  }\n`;\n","import React from 'react';\nimport { AnimatedIco } from './styled';\n\nconst AnimatedLinesIco = () => {\n  return (\n    <AnimatedIco>\n      <span></span>\n      <span></span>\n      <span></span>\n    </AnimatedIco>\n  );\n};\n\nexport default AnimatedLinesIco;\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport ATFImage from '../../assets/images/atf-image.png';\nimport PlayIco from '../../assets/images/play-light-ico.svg';\nimport BoltIco from '../../assets/images/flash-orange-ico.svg';\nimport LineChartIco from '../../assets/images/chart-light-ico.svg';\n\nimport {\n  ATFImageStyled,\n  ATFVideo,\n  ATFHead,\n  ContentSection,\n  PlayBtn,\n  ATFIconGroup,\n  RoundedIcon,\n  ThirdIco,\n} from './styled';\n\nimport AnimatedLinesIco from '../components/AnimatedLinesIco';\nimport useInView from '../hooks/useInView';\nimport TextSplitter from '../components/TextSplitter';\n\nconst ATFContent = () => {\n  const headingRef = useRef(null);\n  const isVisible = useInView(headingRef);\n  const [showIcons, setShowIcons] = useState(false);\n\n  useEffect(() => {\n    if (isVisible) {\n      setTimeout(() => {\n        setShowIcons(true);\n      }, 1000);\n    } else {\n      setShowIcons(false);\n    }\n  }, [isVisible]);\n\n  return (\n    <ContentSection>\n      <ATFIconGroup>\n        <RoundedIcon\n          className={`${\n            showIcons\n              ? 'fade-in animate__animated  animate__rotateIn animate__rotateIn'\n              : 'hidden'\n          }`}\n          imagesize={'40px'}\n          size={'102px'}\n          bg={'var(--btn-gray)'}\n        >\n          <img src={BoltIco} />\n        </RoundedIcon>\n        <RoundedIcon\n          className={`${\n            showIcons\n              ? 'fade-in animate__animated  animate__rotateIn animate__rotateIn'\n              : 'hidden'\n          }`}\n          imagesize={'40px'}\n          size={'102px'}\n          bg={'var(--orange)'}\n        >\n          <img src={LineChartIco} />\n        </RoundedIcon>\n      </ATFIconGroup>\n\n      <ATFHead ref={headingRef} className={isVisible ? 'animate-heading' : ''}>\n        <span className=\"block\">\n          <TextSplitter text={'Analytics'} />\n        </span>\n        <span className=\"block\">\n          <TextSplitter text={'that'} />\n          &nbsp;\n          <span className=\"light\">\n            <TextSplitter text={'help'} />\n            &nbsp;\n          </span>\n          <TextSplitter text={'you'} /> &nbsp;\n        </span>\n        <span className=\"block\">\n          <TextSplitter text={'shape'} /> &nbsp;<span className=\"space\"></span>\n          <TextSplitter text={'the'} />\n          &nbsp;\n          <TextSplitter text={'future'} />\n        </span>\n      </ATFHead>\n\n      <ThirdIco\n        className={\n          showIcons ? 'fade-in animate__animated  animate__zoomIn' : 'hidden'\n        }\n        imagesize={'40px'}\n        size={'102px'}\n        bg={'var(--yellow)'}\n      >\n        <AnimatedLinesIco />\n      </ThirdIco>\n      <ATFVideo>\n        <PlayBtn\n          className={\n            showIcons ? 'fade-in animate__animated  animate__zoomIn' : 'hidden'\n          }\n        >\n          <img src={PlayIco} width={30} height={30} />\n        </PlayBtn>\n        <ATFImageStyled\n          className={\n            showIcons ? 'fade-in animate__animated  animate__zoomIn' : 'hidden'\n          }\n          width={400}\n          height={250}\n          src={ATFImage}\n        />{' '}\n        <br />\n      </ATFVideo>\n    </ContentSection>\n  );\n};\n\nexport default ATFContent;\n","import React from 'react';\n\nconst TextSplitter = ({ text, appendedMarkup }) => {\n  return [\n    ...text.split('').map((char, idx) => (\n      <span key={idx} className=\"split\">\n        {char}\n      </span>\n    )),\n    appendedMarkup ? (\n      <span key={`appended-text-${text}`} className=\"split\">\n        {appendedMarkup}\n      </span>\n    ) : (\n      ''\n    ),\n  ];\n};\n\nexport default TextSplitter;\n"],"names":["AnimatedIco","styled","figure","_templateObject","React","headingRef","useRef","isVisible","useInView","_useState2","useState","showIcons","setShowIcons","useEffect","setTimeout","ContentSection","ATFIconGroup","RoundedIcon","className","concat","imagesize","size","bg","src","BoltIco","LineChartIco","ATFHead","ref","TextSplitter","text","ThirdIco","AnimatedLinesIco","ATFVideo","PlayBtn","PlayIco","width","height","ATFImageStyled","ATFImage","_ref","appendedMarkup","split","map","char","idx","key"],"sourceRoot":""}